
(define obs (lazy-list 'if (lazy-list 'if 't 'f 'f) 'f 't))

(define (id x) x)


(pretty-print (psmc-query (depth) (map list (iota 17))
            1000
            20

            (define (terminal t) (lambda () t))

            (define EXPR
              (lambda ()
                (sample (multinomial (list IF BOOL) (list 1/4 3/4)))))
            (define IF
              (lambda ()
                (lazy-list 'if (EXPR) (EXPR) (EXPR))))
            (define BOOL
              (lambda ()
                (sample  (uniform-draw (list (terminal 't) (terminal 'f))))))

            (define program (EXPR))

            ;;query expression
            (first (lazy-list->list program depth))
            ;;conditional expression
            (lazy-equal? program obs depth)))

            ;; (define (color)
            ;;   (if (flip) 'a 'b))
            
            ;; (define tree
            ;;   (lazify
            ;;   (lambda ()
            ;;     (if (flip)
            ;;         (color) 
            ;;         (lazy-list (color) (tree) (tree))))))


;(tree-equal? (lazify (node 'a (color) 'b)) (node 'a 'b 'b) 2);(tree) obs 1)

(define obs3 (lazy-list 'a (lazy-list 'a 'b 'b) (lazy-list 'a 'b 'b)))

(pretty-print (lazy-list->list obs 17))


(iota 20)
(pretty-print (lazy-list->list (lazy-pair 't 'f) 1))
(pretty-print (lazy-equal? obs (lazy-pair 't 'f) 1))
;;(lazy-list->list '(1 2 3) 5)



